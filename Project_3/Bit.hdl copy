// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Bit.hdl

/**
 * 1-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 *                 else out does not change (out[t+1] = out[t])
 */

CHIP Bit {
    IN in, load;
    OUT out;

    PARTS:
    /* When load = 1, we send in through the mux and to DFF, at next detected edge
    this value appears at the output */

    Mux(a = w2, b = in, sel = load, out = w1);
    DFF(in = w1, out = out, out = w2); // we feed the output back to the mux for storage when load = 0
// w2 is a seperate internal wire that equals the output of the 1 bit register

/* Although it isn't clear from the code due to language specific issues and pin connection rules,
all we are doing is sending an in input and the previous flip flop output to a mux
the load input then selects which one is sent to the flip flops input. On the next cycle
the flip flop output is then either retained or updated */

/* sample run and explanation:

at one clock cycle ld = 1 and in = 1, this value is sent to FF. At the next cycle,
this value appears at the output so out = 1. Load goes to 0 so this input (out(t-1)) is sent
through flip flop at the next rising edge and the value of 1 is retained
*/


}
